apiVersion: v1
data:
  mongodb-up-test.sh: "#!/usr/bin/env bash\n\nMONGOCACRT=/ca/tls.crt\nMONGOPEM=/work-dir/mongo.pem\n\
    \nMONGOARGS=\"--quiet\"\n\nif [ -f \"$MONGOPEM\" ]; then\n    MONGOARGS=\"$MONGOARGS\
    \ --ssl --sslCAFile $MONGOCACRT --sslPEMKeyFile $MONGOPEM\"\nfi\n\nif [[ \"${AUTH}\"\
    \ == \"true\" ]]; then\n    MONGOARGS=\"$MONGOARGS --username $ADMIN_USER --password\
    \ $ADMIN_PASSWORD --authenticationDatabase admin\"\nfi\n\npod_name() {\n    local\
    \ full_name=\"${FULL_NAME?Environment variable FULL_NAME not set}\"\n    local\
    \ index=\"$1\"\n    echo \"$full_name-$index.$full_name\"\n}\n\nreplicas() {\n\
    \    echo \"${REPLICAS?Environment variable REPLICAS not set}\"\n}\n\nmaster_pod()\
    \ {\n    for ((i = 0; i < $(replicas); ++i)); do\n        response=$(mongo $MONGOARGS\
    \ \"--host=$(pod_name \"$i\")\" \"--eval=rs.isMaster().ismaster\")\n        if\
    \ [[ \"$response\" == \"true\" ]]; then\n            pod_name \"$i\"\n       \
    \     break\n        fi\n    done\n}\n\nsetup() {\n    local ready=0\n    until\
    \ [[ \"$ready\" -eq $(replicas) ]]; do\n        echo \"Waiting for application\
    \ to become ready\" >&2\n        sleep 1\n\n        for ((i = 0; i < $(replicas);\
    \ ++i)); do\n            response=$(mongo $MONGOARGS \"--host=$(pod_name \"$i\"\
    )\" \"--eval=rs.status().ok\" || true)\n            if [[ \"$response\" -eq 1\
    \ ]]; then\n                ready=$((ready + 1))\n            fi\n        done\n\
    \    done\n}\n\n@test \"Testing mongodb client is executable\" {\n    mongo -h\n\
    \    [ \"$?\" -eq 0 ]\n}\n\n@test \"Connect mongodb client to mongodb pods\" {\n\
    \    for ((i = 0; i < $(replicas); ++i)); do\n        response=$(mongo $MONGOARGS\
    \ \"--host=$(pod_name \"$i\")\" \"--eval=rs.status().ok\")\n        if [[ ! \"\
    $response\" -eq 1 ]]; then\n            exit 1\n        fi\n    done\n}\n\n@test\
    \ \"Write key to primary\" {\n    response=$(mongo $MONGOARGS --host=$(master_pod)\
    \ \"--eval=db.test.insert({\\\"abc\\\": \\\"def\\\"}).nInserted\")\n    if [[\
    \ ! \"$response\" -eq 1 ]]; then\n        exit 1\n    fi\n}\n\n@test \"Read key\
    \ from slaves\" {\n    # wait for slaves to catch up\n    sleep 10\n\n    for\
    \ ((i = 0; i < $(replicas); ++i)); do\n        response=$(mongo $MONGOARGS --host=$(pod_name\
    \ \"$i\") \"--eval=rs.slaveOk(); db.test.find({\\\"abc\\\":\\\"def\\\"})\")\n\
    \        if [[ ! \"$response\" =~ .*def.* ]]; then\n            exit 1\n     \
    \   fi\n    done\n\n    # Clean up a document after test\n    mongo $MONGOARGS\
    \ --host=$(master_pod) \"--eval=db.test.deleteMany({\\\"abc\\\": \\\"def\\\"})\"\
    \n}\n"
kind: ConfigMap
metadata:
  labels:
    app: mongodb-replicaset
    chart: mongodb-replicaset-3.9.2
    heritage: Tiller
    io.cattle.field/appId: mongodb-replicaset
    release: mongodb-replicaset
  name: mongodb-replicaset-tests
  namespace: mongodb-replicaset
