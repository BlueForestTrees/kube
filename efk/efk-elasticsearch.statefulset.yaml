apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    field.cattle.io/publicEndpoints: '[{"addresses":["51.77.137.98"],"port":31922,"protocol":"TCP","serviceName":"efk:efk-elasticsearch","allNodes":true},{"addresses":["51.77.137.98"],"port":32214,"protocol":"TCP","serviceName":"efk:efk-elasticsearch","allNodes":true}]'
  labels:
    app: elasticsearch
    chart: elasticsearch-0.1.0
    heritage: Tiller
    io.cattle.field/appId: efk
    release: efk
  name: efk-elasticsearch
  namespace: efk
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: elasticsearch
      component: master
      release: efk
  serviceName: efk-elasticsearch
  template:
    metadata:
      annotations:
        cattle.io/timestamp: '2019-03-23T15:17:37Z'
        field.cattle.io/ports: '[[{"containerPort":9300,"dnsName":"efk-elasticsearch-","name":"transport","protocol":"TCP","sourcePort":0},{"containerPort":9200,"dnsName":"efk-elasticsearch-","name":"http","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        app: elasticsearch
        component: master
        release: efk
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: elasticsearch
                  component: master
                  release: efk
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: ES_JAVA_OPTS
          value: -Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m
        - name: cluster.name
          value: efk-cluster
        - name: discovery.zen.minimum_master_nodes
          value: '2'
        - name: discovery.zen.ping.unicast.hosts
          value: efk-elasticsearch
        - name: http.cors.allow-origin
          value: '*'
        - name: http.cors.enabled
          value: 'true'
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              divisor: '0'
              resource: limits.cpu
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
        imagePullPolicy: IfNotPresent
        name: efk-elasticsearch
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        - containerPort: 9200
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: '1'
          requests:
            cpu: 25m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: es-data
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        image: busybox
        imagePullPolicy: Always
        name: sysctl
        resources: {}
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      serviceAccount: efk-elasticsearch
      serviceAccountName: efk-elasticsearch
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: es-data
  updateStrategy:
    type: OnDelete
