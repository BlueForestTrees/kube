apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: rabbitmq-ha
    chart: rabbitmq-ha-1.19.0
    heritage: Tiller
    release: rabbitmq-ha
  name: rabbitmq-ha
  namespace: rabbitmq-ha
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rabbitmq-ha
      release: rabbitmq-ha
  serviceName: rabbitmq-ha-discovery
  template:
    metadata:
      annotations:
        checksum/config: dee23dd0659218e793f61fe088b2d3160277305101cd34f02bc4d054d448d30d
      creationTimestamp: null
      labels:
        app: rabbitmq-ha
        release: rabbitmq-ha
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: rabbitmq-ha
                  release: rabbitmq-ha
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: RABBITMQ_USE_LONGNAME
          value: 'true'
        - name: RABBITMQ_NODENAME
          value: rabbit@$(MY_POD_NAME).rabbitmq-ha-discovery.rabbitmq-ha.svc.cluster.local
        - name: K8S_HOSTNAME_SUFFIX
          value: .rabbitmq-ha-discovery.rabbitmq-ha.svc.cluster.local
        - name: K8S_SERVICE_NAME
          value: rabbitmq-ha-discovery
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              key: rabbitmq-erlang-cookie
              name: rabbitmq-ha
        image: rabbitmq:3.7-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - 'wget -O - -q --header "Authorization: Basic bWFuYWdlbWVudDpFOVIzZmpabTRlakZrVkZF"
              http://localhost:15672/api/healthchecks/node | grep -qF "{\"status\":\"ok\"}"'
          failureThreshold: 6
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: rabbitmq-ha
        ports:
        - containerPort: 4369
          name: epmd
          protocol: TCP
        - containerPort: 5672
          name: amqp
          protocol: TCP
        - containerPort: 15672
          name: http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - 'wget -O - -q --header "Authorization: Basic bWFuYWdlbWVudDpFOVIzZmpabTRlakZrVkZF"
              http://localhost:15672/api/healthchecks/node | grep -qF "{\"status\":\"ok\"}"'
          failureThreshold: 6
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: data
        - mountPath: /etc/rabbitmq
          name: config
        - mountPath: /etc/definitions
          name: definitions
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - cp /configmap/* /etc/rabbitmq; rm -f /var/lib/rabbitmq/.erlang.cookie
        image: busybox:latest
        imagePullPolicy: Always
        name: copy-rabbitmq-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /configmap
          name: configmap
        - mountPath: /etc/rabbitmq
          name: config
        - mountPath: /var/lib/rabbitmq
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: rabbitmq-ha
      serviceAccountName: rabbitmq-ha
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: config
      - configMap:
          defaultMode: 420
          name: rabbitmq-ha
        name: configmap
      - name: definitions
        secret:
          defaultMode: 420
          items:
          - key: definitions.json
            path: definitions.json
          secretName: rabbitmq-ha
      - emptyDir: {}
        name: data
  updateStrategy:
    type: OnDelete
