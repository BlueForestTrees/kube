apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  annotations:
    field.cattle.io/publicEndpoints: '[{"nodeName":"c-5qdp4:m-f5d75f31e94f","addresses":["51.77.137.108"],"port":80,"protocol":"TCP","podName":"ingress-nginx:nginx-ingress-controller-l8zzk","allNodes":false},{"nodeName":"c-5qdp4:m-f5d75f31e94f","addresses":["51.77.137.108"],"port":443,"protocol":"TCP","podName":"ingress-nginx:nginx-ingress-controller-l8zzk","allNodes":false},{"nodeName":"c-5qdp4:m-f97c5d29941b","addresses":["51.77.136.161"],"port":80,"protocol":"TCP","podName":"ingress-nginx:nginx-ingress-controller-9kjcw","allNodes":false},{"nodeName":"c-5qdp4:m-f97c5d29941b","addresses":["51.77.136.161"],"port":443,"protocol":"TCP","podName":"ingress-nginx:nginx-ingress-controller-9kjcw","allNodes":false},{"nodeName":"c-5qdp4:m-b8a9f715dbb6","addresses":["51.77.137.98"],"port":80,"protocol":"TCP","podName":"ingress-nginx:nginx-ingress-controller-7f6jn","allNodes":false},{"nodeName":"c-5qdp4:m-b8a9f715dbb6","addresses":["51.77.137.98"],"port":443,"protocol":"TCP","podName":"ingress-nginx:nginx-ingress-controller-7f6jn","allNodes":false}]'
  labels:
    app: ingress-nginx
  name: nginx-ingress-controller
  namespace: ingress-nginx
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ingress-nginx
  template:
    metadata:
      annotations:
        cattle.io/timestamp: '2019-03-13T13:35:16Z'
        field.cattle.io/ports: '[[{"containerPort":80,"dnsName":"nginx-ingress-controller-","name":"http","protocol":"TCP","sourcePort":0},{"containerPort":443,"dnsName":"nginx-ingress-controller-","name":"https","protocol":"TCP","sourcePort":0}]]'
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
      creationTimestamp: null
      labels:
        app: ingress-nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: NotIn
                values:
                - windows
      containers:
      - args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        - --configmap=$(POD_NAMESPACE)/nginx-configuration
        - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
        - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
        - --annotations-prefix=nginx.ingress.kubernetes.io
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: rancher/nginx-ingress-controller:0.16.2-rancher1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx-ingress-controller
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 33
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: nginx-ingress-serviceaccount
      serviceAccountName: nginx-ingress-serviceaccount
      terminationGracePeriodSeconds: 30
  templateGeneration: 7
  updateStrategy:
    type: OnDelete
